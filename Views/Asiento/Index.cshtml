@model SistemaContableCSG.ViewModels.AsientoIndex
@{
    ViewData["Title"] = "Asientos";
}
@section Css{
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" />
}
<h3 class="text-center">Asientos</h3>
<br />
<form id="AsientoForm" method="post" asp-action="Create" asp-controller="Asiento">
    <div class="form-floating">
        <input type="text" asp-for="Asiento.Glosa" class="form-control" />
        <label asp-for="Asiento.Glosa" class="control-label">Glosa</label>
        <span asp-validation-for="Asiento.Glosa" class="text-danger"></span>
    </div>
    <br />
    <div class="form-floating">
        <input type="date" asp-for="Asiento.Fecha" class="form-control" />
        <label asp-for="Asiento.Fecha" class="control-label">Fecha</label>
        <span asp-validation-for="Asiento.Fecha" class="text-danger"></span>
    </div>
    <br />
    <div class="form-floating">
        <select asp-for="PeriodoId" class="form-select" asp-items="@Model.Periodos">
        </select>
        <label asp-for="PeriodoId" class="control-label">Periodo</label>
        <span asp-validation-for="PeriodoId" class="text-danger"></span>
    </div>
    <br />
    <table class="table table-bordered text-md-nowrap table-dark table-striped table-hover mb-5" id="datatable" style="width:100%">
        <thead>
            <tr>
                <th class="text-center align-middle">Cuenta</th>
                <th class="text-center align-middle">Debe</th>
                <th class="text-center align-middle">Haber</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <button type="button" id="add-row-button" class="btn btn-success"><i class="fa-solid fa-plus"></i> Agregar fila</button>
    <button type="button" id="remove-last-row-button" class="btn btn-danger"><i class="fa-solid fa-minus"></i> Eliminar fila</button>
    <center><button id="btnAsientoForm" type="button" class="btn btn-primary"><i class="fa-solid fa-floppy-disk"></i> Guardar</button></center>
</form>

@section Scripts{
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <partial name="../shared/_ValidationScriptsPartial" />

    <script>
        var dataTable = $('#datatable').DataTable({
            "scrollX": true,
            "processing": true,
            "searching": false,
            "ordering": false,
            "language": {
                "decimal": ".",
                "emptyTable": "No hay datos disponibles en la tabla",
                "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                "infoEmpty": "Mostrando del 0 al 0 de un todal de 0 registros",
                "infoFiltered": "(Filtrado de _MAX_ registros totales)",
                "lengthMenu": "Mostrar _MENU_ registros por página",
                "loadingRecords": "Cargando...",
                "processing": "",
                "search": "Buscar:",
                "zeroRecords": "No se encontraron resultados",
                "paginate": {
                    "first": "Primero",
                    "last": "Último",
                    "next": "Siguiente",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sortDescending": ": Activar para ordenar la columna de manera descendente"
                },
                "select": {
                    "rows": {
                        "1": "1 fila seleccionada",
                        "_": "%d filas seleccionadas"
                    }
                },
            }
        });

        var rowCount = 0; // Contador de filas agregadas
        $(document).ready(function () {
            // Simular clic en el botón "Agregar fila" al cargar la página
            $('#add-row-button').click();
            $('#add-row-button').click();

            var procesoTerminado = '@TempData["status"]';

            if (procesoTerminado !== "") {
                Swal.fire({
                    icon: '@TempData["status"]',
                    text: '@TempData["msj"]',
                });
            }
        });

        $('#add-row-button').click(function () {
            $.ajax({
                url: '@Url.Action("asientoCuentasData", "Cuenta")',
                type: 'GET',
                success: function (result) {
                    var cuentasOptions = result.data;
                    var newRow = '<tr>' +
                        '<td><select class="form-select" name="Cuentas[]">';
                    for (var i = 0; i < cuentasOptions.length; i++) {
                        newRow += '<option value="' + cuentasOptions[i].codigo + '">' + cuentasOptions[i].nombre + '</option>';
                    }
                    newRow += '</select></td>' +
                        '<td class="text-center align-middle">' +
                        '<input type="number" step="0.01" inputmode="decimal" name="Debe[]" class="form-control ' + (rowCount % 2 !== 0 ? 'active' : 'disabled') + '" required/>' +
                        '</td>' +
                        '<td class="text-center align-middle">' +
                        '<input type="number" step="0.01" inputmode="decimal" title="as" name="Haber[]" class="form-control  ' + (rowCount % 2 === 0 ? 'active' : 'disabled') + '" required/>' +
                        '</td>' +
                        '</tr>';

                    var newRowElement = $(newRow);
                    dataTable.row.add(newRowElement).draw();

                    // Alternar estado de campos "Debe" y "Haber"
                    rowCount++;
                    $('.active').prop('disabled', true).removeClass('active');
                    $('.disabled').prop('disabled', false).removeClass('disabled');

                    // Hacer scroll hasta el final de la tabla
                    $("html, body").animate({ scrollTop: $(document).height() }, "slow");
                }
            });
        });

        $('#remove-last-row-button').click(function () {
            var lastRowIndex = dataTable.rows().count() - 1; // Obtener el índice de la última fila
            if (lastRowIndex > 1) {
                dataTable.row(lastRowIndex).remove().draw(); // Eliminar la última fila
                rowCount--; // Restar 1 al contador de filas
            }
        });

        $('#btnAsientoForm').click(function () {
            var totalDebe = 0;
            var totalHaber = 0;

            // Sumar los valores de "Debe[]"
            $('input[name="Debe[]"]').each(function () {
                var debeValue = parseFloat($(this).val());
                if (!isNaN(debeValue)) {
                    totalDebe += debeValue;
                }
            });

            // Sumar los valores de "Haber[]"
            $('input[name="Haber[]"]').each(function () {
                var haberValue = parseFloat($(this).val());
                if (!isNaN(haberValue)) {
                    totalHaber += haberValue;
                }
            });

            // Comparar las sumas y mostrar un mensaje si no son iguales
            if (totalDebe !== totalHaber) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error de partida doble',
                    text: 'La suma de los valores en "Debe" no coincide con la suma en "Haber"',
                });
                return; // Detener el envío del formulario
            }

            $("#AsientoForm").submit();
        });
    </script>
}